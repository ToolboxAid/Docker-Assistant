#!/bin/bash
#
# Created by Quesenbery, D
# ToolbaxAid.com
# Date  10/20/2022
#
# docker-compose.yml
#

version: '3.8'
services:

#==================================================================
#  https://github.com/traefik/whoami

  whoami:
    image: traefik/whoami
#   image: containous/whoami

    container_name: ${TRAEFIK}
    hostname:       ${SITE}

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

    restart: ${RESTART}

    environment:
      - TZ=${TIME_ZONE}

    security_opt:
      - no-new-privileges:true

    labels:
       - traefik.enable=true
       - "traefik.docker.network=${TRAEFIK_4_LAN}"

       # Routes

       - traefik.port=80
       - traefik.http.routers.${TRAEFIK}.service=${TRAEFIK}
       - traefik.http.routers.${TRAEFIK}.rule=Host(`${SITE}`)
       - traefik.http.routers.${TRAEFIK}.tls=true
       - traefik.http.routers.${TRAEFIK}.tls.certresolver=${CERT_RESOLVER}

       - traefik.http.routers.${TRAEFIK}.entrypoints=websecure
       - traefik.http.routers.${TRAEFIK}.middlewares=TBA-headers@file,${TRAEFIK}-whitelist@docker
                          # simpleAuth@file

      # Middle Wares

       - traefik.http.middlewares.${TRAEFIK}-whitelist.ipwhitelist.ipstrategy.depth=0
       - traefik.http.middlewares.${TRAEFIK}-whitelist.ipwhitelist.sourcerange=${IP_WHITE_LIST}

      # Services

       - traefik.http.services.${TRAEFIK}.loadbalancer.server.url=http://${SITE}
       - traefik.http.services.${TRAEFIK}.loadbalancer.server.port=80
       - traefik.http.services.${TRAEFIK}.loadbalancer.passHostHeader=true

       # Entry points

       - traefik.entryPoints.${TRAEFIK}.proxyProtocol.insecure=false
       - traefik.entryPoints.${TRAEFIK}.proxyProtocol.trustedIPs=${TRUSTED_IP_LIST}

       - traefik.entryPoints.${TRAEFIK}.forwardedHeaders.insecure=false
       - traefik.entryPoints.${TRAEFIK}.forwardedHeaders.trustedIPs=${TRUSTED_IP_LIST}

    networks:
      web: {}

#    healthcheck:
##      test: curl --fail http://localhost || exit 1
#       test: wget -S --spider http://localhost:80/ || exit 1
#       interval: 60s
#       retries: 5
#       start_period: 20s
#       timeout: 10s
#

#==================================================================
networks:
  web:
    name: "${TRAEFIK_4_LAN}"
    external: true 
